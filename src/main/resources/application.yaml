spring:
  application:
    name: catalog-service
  lifecycle: # work with the below shutdown: graceful
    timeout-per-shutdown-phase: 15s
  config: # note this is in this level!!! `spring.config.import`
    import: "optional:configserver:"
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/PolarBookshop
  cloud:
    config: # another config here.
      uri: http://localhost:8888
      request:
        connect-timeout: 5000
        read-timeout: 5000
      fail-fast: false   # set to true in production
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 3000
        multiplier: 1.2
  datasource:
    username: qlw
    password: pass
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5

# config to show SQL statements generated by Spring Data JDBC
logging.level.org.springframework.jdbc.core: DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils: TRACE

server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s

management:
  endpoints:
    web:
      exposure:
        include: "refresh,info,env,health"

polar:
  greeting: Welcome to the local book catalog from cfg file!